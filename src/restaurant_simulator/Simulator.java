package restaurant_simulator;

import com.toedter.calendar.JTextFieldDateEditor;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * Interfaccia grafica Simulator, consente la simulazione del completamento
 * degli ordini presenti nel ristorante
 * 
 * @author Danilo Dolce e Simone Contini
 * @version 1.0
 */
public class Simulator extends javax.swing.JFrame {

    private final String fileOrderPath = "data\\Order.csv";
    
    /**
     * La lista degli ordini del ristorante
     */
    List<Order> orders = new ArrayList<>();
    
    /**
     * Creates new form Simulator
     */    
    public Simulator(){
        super("Restaurant Simulator (MM): Simulatore");        
        initComponents();        
        this.setResizable(false);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }
    
    public Simulator(List<Order> orders) {
        super("Restaurant Simulator (MM): Simulatore");
        this.orders = orders;
        initComponents();
        
        // Inizializzo il calendario con le date valide
        Calendar min = Calendar.getInstance();
        min.add(Calendar.DAY_OF_MONTH, 0);
        Calendar max = Calendar.getInstance();
        RangeEvaluator re = new RangeEvaluator();
        re.setMinSelectableDate(min.getTime());
        txtDateChooser.getJCalendar().getDayChooser().addDateEvaluator(re);
        JTextFieldDateEditor editor = (JTextFieldDateEditor) txtDateChooser.getDateEditor();
        editor.setEditable(false);
        
        btnBack.addActionListener(
            ev -> {
                ManagerHome rmh = new ManagerHome();
                rmh.setVisible(true);
                this.setVisible(false);
            });
        
        rbtnAllDay.addActionListener(
            ev -> {
                if(this.rbtnAllDay.isSelected()) {
                    this.cbTimeChooser.setEnabled(false);
                }
                else {
                    this.cbTimeChooser.setEnabled(true);
                }
            });
        
        btnSimulate.addActionListener(
            ev -> {
                SimpleDateFormat dataStandardFormat = new SimpleDateFormat("dd-MM-yyyy");
                String dataString = dataStandardFormat.format(txtDateChooser.getDate());
                String time = "";
                if (this.cbTimeChooser.isEnabled()) {
                    time += cbTimeChooser.getItemAt(cbTimeChooser.getSelectedIndex());
                }
                else {
                    time += "23:59";
                }
                String dateSelectedString = dataString + " " + time;

                Date dateSelected = DateUtility.parseDateWithTime(dateSelectedString);

                for(Order order : orders){
                    if (DateUtility.removeSecondsAndMilliseconds(dateSelected).after(order.getData())){
                        //System.out.println("Sto effettuando l'update dell'ordine ...");
                        order.getState().orderDateIsLessThanCurrentDate(order);
                        order.setDateSimulated(true);
                        order.updateRecord();
                    }
                }

                JOptionPane.showMessageDialog(rootPane, "Simulazione effettuata", "InfoBox", JOptionPane.INFORMATION_MESSAGE);
            });
        
        this.setResizable(false);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtDateChooser = new com.toedter.calendar.JDateChooser();
        lblDateChooser = new javax.swing.JLabel();
        cbTimeChooser = new javax.swing.JComboBox<>();
        lblDateChooser1 = new javax.swing.JLabel();
        rbtnAllDay = new javax.swing.JRadioButton();
        btnSimulate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(45, 52, 54));

        lblDateChooser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDateChooser.setForeground(new java.awt.Color(255, 255, 255));
        lblDateChooser.setText("Seleziona la data di simulazione");

        cbTimeChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00", "13:00", "14:00", "15:00", "19:00", "20:00", "21:00", "22:00" }));

        lblDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDateChooser1.setForeground(new java.awt.Color(255, 255, 255));
        lblDateChooser1.setText("Seleziona un orario di simulazione: ");

        rbtnAllDay.setForeground(new java.awt.Color(255, 255, 255));
        rbtnAllDay.setText("Tutto il giorno");
        rbtnAllDay.setContentAreaFilled(false);

        btnSimulate.setText("Simula");
        btnSimulate.setFocusPainted(false);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/left-arrow.png"))); // NOI18N
        btnBack.setToolTipText("Torna indietro");
        btnBack.setBorderPainted(false);
        btnBack.setContentAreaFilled(false);
        btnBack.setFocusPainted(false);
        btnBack.setMargin(new java.awt.Insets(2, 0, 2, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbTimeChooser, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblDateChooser1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                                .addComponent(rbtnAllDay))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblDateChooser)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(btnSimulate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(lblDateChooser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDateChooser1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbTimeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(rbtnAllDay)
                .addGap(18, 18, 18)
                .addComponent(btnSimulate)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Simulator().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSimulate;
    private javax.swing.JComboBox<String> cbTimeChooser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDateChooser;
    private javax.swing.JLabel lblDateChooser1;
    private javax.swing.JRadioButton rbtnAllDay;
    private com.toedter.calendar.JDateChooser txtDateChooser;
    // End of variables declaration//GEN-END:variables
}
